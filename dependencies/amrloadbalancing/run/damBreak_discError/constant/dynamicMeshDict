/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      dynamicMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dynamicFvMesh loadBalanceDynamicPolyRefinementFvMesh;
//dynamicFvMesh loadBalanceFvMesh;
/*dynamicFvMesh dynamicPolyMultiRefinementFvMesh;*/

dynamicRefineFvMeshCoeffs
{
    // Global refinement configuration

    // Maximum refinement level
    maxRefinementLevel   3;

    // Refine every refineInterval step
    refineInterval   1;

    // Unrefine every unrefineInterval step
    unrefineInterval 1;

    // Separate refinement/unrefinement steps. In case this is switched on,
    // if both refinement and unrefinement should have been performed in a
    // single step, unrefinement is skipped. Switched off by default, meaning
    // that it should be safe to perform both at the same time
    separateUpdates true;

    // Dynamic mesh procedure controls

    // Polyhedral refinement engine controls
    active yes;

    // Maximum number of cells to allow (not strictly controlled)
    maxCells             2000000;

    // Number of buffer layers between refinement levels
    nRefinementBufferLayers        1;

    // Number of buffer layers for unrefinement in order to run away from the
    // region that is getting refined at the same time in order to avoid point
    // level inconsistencies
    nUnrefinementBufferLayers      3;

    // Whether to use edge based consistency check. Needed when one allows more
    // than 2 refinement levels (automatically switched on)
    edgeBasedConsistency           yes;

    refinements
    (
        refineBasedOnAlphaDiscError
		{
		    refineInterval   1;
		    unrefineInterval 2;
		    maxRefinementLevel 1;
		    separateUpdates false;

		    // Refinement selection criteria
		    // Refinement selection criteria
            refinementSelection
		    {
		        // Refines all cells with 0.001 < alpha < 0.999, otherwise unrefines
		        // previously refined cells
		        type        discretisationErrorRefinement;
		        fieldName   alpha1;
		        maxError    0.05;
		        // Whether to use cell-point-cell smoothing for selecting refinement
		        // candidates. Off by default
		        cellPointCellSmoothing off;
		    }
            
		}

        refineBasedOnUDiscError
        {
            refineInterval   1;
            unrefineInterval 2;
            maxRefinementLevel 1;
            separateUpdates false;

            // Refinement selection criteria
            // Refinement selection criteria
            refinementSelection
            {
                // Refines all cells with 0.001 < alpha < 0.999, otherwise unrefines
                // previously refined cells
                type        discretisationErrorRefinement;
                fieldName   U;
                maxError    0.2;
                // Whether to use cell-point-cell smoothing for selecting refinement
                // candidates. Off by default
                cellPointCellSmoothing off;
            }
            
        }

    );
}

loadBalanceFvMeshCoeffs
{
    // Load Balancing

    imbalanceTrigger 0.2;

    numberOfSubdomains 2;

    method          hierarchical;

    hierarchicalCoeffs
	{
	    n               ( 2 1 1 );
	    delta           0.001;
	    order           xyz;
	}
}

// ************************************************************************* //
