/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     4.1                                |
|   \\  /    A nd           | Web:         http://www.foam-extend.org         |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location	"0";
	object		alpha1.org;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
dimensions		[0 0 0 0 0 0 0];
internalField	uniform 0;

boundaryField
{
	impellerWall
	{
		type            zeroGradient;
	// return theta0_ + (thetaA_ - thetaR_)*tanh(uwall/uTheta_);
		/*type		dynamicAlphaContactAngle;
		uTheta		1e-0;
		thetaA		40;
		theta0		25;
		thetaR		10;
		limit		none;
		value		uniform 1;*/
	}

	baffleWall
	{
		type            zeroGradient;
		/*type		dynamicAlphaContactAngle;
		uTheta		1e-0;
		thetaA		40;
		theta0		25;
		thetaR		10;
		limit		none;
		value		uniform 1;*/
	}

	blade
	{
		type            zeroGradient;
		/*type		dynamicAlphaContactAngle;
		uTheta		1e-0;
		thetaA		40;
		theta0		25;
		thetaR		10;
		limit		none;
		value		uniform 1;*/
	}

	substrate
	{
		type            zeroGradient;
		/*type		dynamicAlphaContactAngle;
		uTheta		1e-0;
		thetaA		40;
		theta0		25;
		thetaR		10;
		limit		none;
		value		uniform 1;*/
	}

	insideSlider
	{
		type		ggi;
		value		$internalField;
	}

	outsideSlider
	{
		type		ggi;
		value		$internalField;
	}

	atmosphere
	{
		type		inletOutlet;
		inletValue	uniform 0;
		value 		uniform 0;
	}

	frontAndBack
	{
		type		empty;
	}
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //


