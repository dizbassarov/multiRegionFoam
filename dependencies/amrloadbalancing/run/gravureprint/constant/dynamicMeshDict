/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      dynamicMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dynamicFvMesh loadBalanceDynamicPolyRefinementRotatingGgiFvMesh;
//dynamicFvMesh loadBalanceFvMesh;
/*dynamicFvMesh dynamicPolyMultiRefinementFvMesh;*/

/*dynamicFvMesh rotatingGgiFvMesh;*/

dynamicRefineFvMeshCoeffs
{
    // Global refinement configuration

    // Maximum refinement level
    maxRefinementLevel   2;

    // Refine every refineInterval step
    refineInterval   10;

    // Unrefine every unrefineInterval step
    unrefineInterval 10;

    // Separate refinement/unrefinement steps. In case this is switched on,
    // if both refinement and unrefinement should have been performed in a
    // single step, unrefinement is skipped. Switched off by default, meaning
    // that it should be safe to perform both at the same time
    separateUpdates true;

    // Dynamic mesh procedure controls

    // Polyhedral refinement engine controls
    active yes;

    // Maximum number of cells to allow (not strictly controlled)
    maxCells             2000000;

    // Number of buffer layers between refinement levels
    nRefinementBufferLayers        0;

    // Number of buffer layers for unrefinement in order to run away from the
    // region that is getting refined at the same time in order to avoid point
    // level inconsistencies
    nUnrefinementBufferLayers      3;

    // Whether to use edge based consistency check. Needed when one allows more
    // than 2 refinement levels (automatically switched on)
    edgeBasedConsistency           yes;

    refinements
    (
        /*protectedRefinement
        {
            // Refinement-specific configuration

            // Refine every refineInterval step
            refineInterval   1;

            // Unrefine every unrefineInterval step
            unrefineInterval 1;

            // Maximum refinement level
            maxRefinementLevel   1;

            // Separate refinement/unrefinement steps. In case this is switched on,
            // if both refinement and unrefinement should have been performed in a
            // single step, unrefinement is skipped. Switched off by default, meaning
            // that it should be safe to perform both at the same time
            separateUpdates false;

            // Refinement selection criteria
            refinementSelection
            {
                // Refines around field interface
                type        protectedInitialRefinement;
                

                // Whether to use cell-point-cell smoothing for selecting refinement
                // candidates. Off by default
                cellPointCellSmoothing off;
            }
        }*/

        basedOnAlpha1
        {
            // Refinement-specific configuration

            // Refine every refineInterval step
            refineInterval   10;

            // Unrefine every unrefineInterval step
            unrefineInterval 10;

            // Maximum refinement level
            maxRefinementLevel   2;

            // Separate refinement/unrefinement steps. In case this is switched on,
            // if both refinement and unrefinement should have been performed in a
            // single step, unrefinement is skipped. Switched off by default, meaning
            // that it should be safe to perform both at the same time
            separateUpdates false;

            // Refinement selection criteria
            refinementSelection
            {
                // Refines around field interface
                type         interfaceRefinement;
                fieldNames   (alpha1);
                innerRefLayers  1;
                outerRefLayers  1;

                // Whether to use cell-point-cell smoothing for selecting refinement
                // candidates. Off by default
                cellPointCellSmoothing off;
            }
        }
    );
}

loadBalanceFvMeshCoeffs
{
    // Load Balancing

    imbalanceTrigger 0.2;

    numberOfSubdomains 2;

    method          hierarchical;

    hierarchicalCoeffs
    {
        n       ( 2 1 1 );
        delta   0.001;
        order   xyz;
    }
}

rotatingGgiFvMeshCoeffs
{
    coordinateSystem
    {
        type            cylindrical;
        origin          (0 0 0);
        axis            (0 0 1);
        direction       (1 0 0);
    }

    // Rotational speed in revolutions per minute
    rpm                 666.667; //=4000 deg/s //0;

    slider
    {
        moving      ( insideSlider );
        static      ( outsideSlider );
    }
}

// ************************************************************************* //
