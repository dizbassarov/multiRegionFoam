/*---------------------------------------------------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     |
    \\  /    A nd           | Copyright (C) 2011-2015 OpenFOAM Foundation
     \\/     M anipulation  |
-------------------------------------------------------------------------------
License
    This file is part of OpenFOAM.

    OpenFOAM is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::heatTransferInterface.C

SourceFiles
    heatTransferInterface.C

\*---------------------------------------------------------------------------*/

#ifndef heatTransferInterface_H
#define heatTransferInterface_H

#include "regionInterfaceType.H"
#include "IOReferencer.H"
#include "HashPtrTable.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{
namespace regionInterfaces
{

/*---------------------------------------------------------------------------*\
                           Class heatTransferInterface Declaration
\*---------------------------------------------------------------------------*/

class heatTransferInterface
:
    public regionInterfaceType
{

    // Private data

        // interface dictionary
        dictionary dict_;

        // Surface tension
        dimensionedScalar K_;

public:

    TypeName("heatTransferInterface");

    // Constructors

        heatTransferInterface
        (
            const word& type,
            const dictionary& dict,
            const Time& runTime,
            const fvPatch& patchA,
            const fvPatch& patchB
        );

    // Destructor
    virtual ~heatTransferInterface()
    {}

    const dimensionedScalar& K() const;

    // Correct interface physics
    void correct();

    // Get min time step based on stability criteria
    scalar getMinDeltaT();

    // Log interface specific information
    void info() const
    {};
};

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
} // End namespace regionInterfaces
} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

// ************************************************************************* //
